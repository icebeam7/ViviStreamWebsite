@model ViviStreamWebsite.Models.PageSongs
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Mvc.Common;
@inject SignInManager<ApplicationUser> SignInManager

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/css/animate.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

@{
    ViewData["Title"] = "Playlist";
}

<h3>Playlist</h3>
@if (User.IsInRole("Moderator"))
{
<div class="row">
    <div class="col-xs-2">
        <a class="btn btn-primary btn-large" asp-action="Create">
            <i class="fa fa-plus"></i> Add a new Song
        </a>
    </div>
    <div class="col-xs-2">
        <a class="btn btn-primary btn-large" asp-action="Index" asp-controller="QuickEdit">
            <i class="fa fa-bolt"></i> Quick Edit</a>
    </div>
</div>
}
    <br />
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h2 class="panel-title">Playlist</h2>
        </div>
        <div class="panel-body">
            <div class="row">
                @using (Html.BeginForm("Index", "Playlist", FormMethod.Get))
                {
                    <div class="col-xs-6">
                        <div style="display: flex">
                            <label style="display: inline-block; line-height:35px;">Show &nbsp;</label>
                            <select class="form-control input-sm" data-val="true" data-val-required="The PageSize field is required." id="PageSize" name="PageSize" style="width: auto">
                                @foreach (var item in Model.PageSize)
                                {
                                    if (item.Key == (int)(ViewBag.CurrentPageSize))
                                    {
                                        <option value="@(item.Key)" selected="selected">@item.Value</option>
                                    }
                                    else
                                    {
                                        <option value="@(item.Key)">@item.Value</option>
                                    }
                                }
                            </select>
                            <label style="display: inline-block; line-height:35px;">&nbsp; entries</label>
                        </div>
                    </div>

                    <div class="col-xs-6">
                        <div class="text-right">
                            <p>
                                Song ID or Song Title: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                                <input type="submit" value="Search" class="btn btn-primary btn-sm" />
                            </p>
                            <p class="form-check form-check-inline">
                                @Html.CheckBox("CheckNew", ViewBag.CheckNew as bool?, new { onClick = "this.form.submit();" })
                                <label class="form-check-label" for="CheckNew">Show newest additions/editions</label>
                            </p>
                        </div>
                    </div>
                    <div><input type="hidden" value="@ViewBag.CurrentSort" name="currentSort" /></div>
                }
            </div>

            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th class="text-center" style="width: 6%">
                                @Html.ActionLink("ID", "Index", new { sortOrder = ViewBag.SortNumber, currentFilter = ViewBag.CurrentFilter, pageSize = ViewBag.CurrentPageSize, checkNew = ViewBag.CheckNew })
                            </th>
                            <th style="width: 55%">
                                @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.SortTitle, currentFilter = ViewBag.CurrentFilter, pageSize = ViewBag.CurrentPageSize, checkNew = ViewBag.CheckNew })
                            </th>
                            <th style="width: 15%">
                                @Html.ActionLink("Artist", "Index", new { sortOrder = ViewBag.SortArtist, currentFilter = ViewBag.CurrentFilter, pageSize = ViewBag.CurrentPageSize, checkNew = ViewBag.CheckNew })
                            </th>
                            <th class="text-center" style="width: 6%">
                                @Html.ActionLink("Duration", "Index", new { sortOrder = ViewBag.SortDuration, currentFilter = ViewBag.CurrentFilter, pageSize = ViewBag.CurrentPageSize, checkNew = ViewBag.CheckNew })
                            </th>
                            <th class="text-center" style="width: 6%">
                                @Html.ActionLink("Counter", "Index", new { sortOrder = ViewBag.SortCounter, currentFilter = ViewBag.CurrentFilter, pageSize = ViewBag.CurrentPageSize })
                            </th>
                            <th style="width: 12%" class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var p in Model.AllSongs)
                        {
                            <tr>
                                <td class="text-center">
                                    @(p.RowKey)
                                </td>
                                <td>
                                    <a href="@(p.YouTubeLink)" target="_blank">@(p.OriginalTitle)</a>
                                </td>
                                <td>
                                    @(p.Channel)
                                </td>
                                <td class="text-center">
                                    @(p.Duration)
                                </td>
                                <td class="text-center">
                                    @(p.Counter0)
                                </td>
                                <td class="text-center">
                                    <a class="btn btn-warning btn-xs" title="Details" href="@Url.Action("Details", "Playlist", new { pk = p.PartitionKey, rk = p.RowKey })"><span><i class="fa fa-info-circle"></i></span></a>
                                    @if (SignInManager.IsSignedIn(User))
                                    {
                                        <a class="btn btn-success btn-xs" title="Request" href="@Url.Action("RequestSong", "Playlist", new { pk = p.PartitionKey, rk = p.RowKey })"><span><i class="fa fa-music"></i></span></a>
                                    }
                                    @if (User.IsInRole("Moderator"))
                                    {
                                        <a class="btn btn-info btn-xs" title="Edit" href="@Url.Action("Edit", "Playlist", new { pk = p.PartitionKey, rk = p.RowKey })"><span><i class="fa fa-pencil-square-o"></i></span></a>
                                        <a class="btn btn-danger btn-xs" title="Delete" href="@Url.Action("Delete", "Playlist", new { pk = p.PartitionKey, rk = p.RowKey })"><span><i class="fa fa-trash-o"></i></span></a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="text-right">
        @Html.PagedListPager((IPagedList)Model.AllSongs,
            page =>
                Url.Action("Index",
                new {
                    page, sortOrder = ViewBag.CurrentSort,
                    currentFilter = ViewBag.CurrentFilter,
                    pageSize = ViewBag.CurrentPageSize,
                    checkNew = ViewBag.CheckNew
                }),
                new PagedListRenderOptions {
                    LinkToFirstPageFormat = "First",
                    LinkToPreviousPageFormat = "Previous",
                    DisplayItemSliceAndTotal = true,
                    ItemSliceAndTotalFormat = "Showing {0} to {1} of {2} entries",
                    LinkToNextPageFormat = "Next",
                    LinkToLastPageFormat = "Last",
                    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                    DisplayLinkToNextPage = PagedListDisplayMode.Always,
                    DisplayLinkToLastPage = PagedListDisplayMode.Always,
                    DisplayLinkToPreviousPage = PagedListDisplayMode.Always
                })
    </div>

    @section Scripts {
        <script type="text/javascript" src="~/js/bootstrap-notify.js"></script>
        <script type="text/javascript" src="~/js/helpers.js"></script>
        <script type="text/javascript">
            $('#PageSize').on('change', function (event) {
                var form = $(event.target).parents('form');

                form.submit();
            });

            var ac = getUrlParameter('ac');
            var type = getUrlParameter('type');

            if (type && ac)
                showNotification(ac, type);
        </script>
    }
